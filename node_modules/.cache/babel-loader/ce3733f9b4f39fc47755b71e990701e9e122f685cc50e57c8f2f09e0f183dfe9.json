{"ast":null,"code":"import React from'react';import{useBox,useCylinder,useSphere}from'@react-three/cannon';import{useLoader}from'@react-three/fiber';import{TextureLoader}from'three';import*as THREE from'three';// This is an enhanced version of the grass map with more detailed features\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GrassMap=()=>{// Create spawn points for players\nconst spawnPoints=[// Red team spawn points\n{position:[-20,1,-20],team:'red'},{position:[-18,1,-18],team:'red'},{position:[-22,1,-18],team:'red'},{position:[-18,1,-22],team:'red'},{position:[-22,1,-22],team:'red'},// Blue team spawn points\n{position:[20,1,20],team:'blue'},{position:[18,1,18],team:'blue'},{position:[22,1,18],team:'blue'},{position:[18,1,22],team:'blue'},{position:[22,1,22],team:'blue'}];// Create physics bodies for various map elements\nconst[groundRef]=useBox(()=>({args:[100,1,100],position:[0,-0.5,0],type:'Static',material:{friction:0.3}}));// Trees\nconst createTree=function(position){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'normal';const[trunkRef]=useCylinder(()=>({args:[0.5,0.5,4,8],position:[position[0],position[1]+2,position[2]],rotation:[Math.PI/2,0,0],type:'Static'}));return/*#__PURE__*/_jsxs(\"group\",{children:[/*#__PURE__*/_jsxs(\"mesh\",{ref:trunkRef,castShadow:true,children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:[0.5,0.5,4,8]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#5d4037\"})]}),type==='normal'&&/*#__PURE__*/_jsxs(\"mesh\",{position:[position[0],position[1]+4.5,position[2]],castShadow:true,children:[/*#__PURE__*/_jsx(\"sphereGeometry\",{args:[2,8,8]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#33691e\"})]}),type==='pine'&&/*#__PURE__*/_jsxs(\"mesh\",{position:[position[0],position[1]+4.5,position[2]],castShadow:true,children:[/*#__PURE__*/_jsx(\"coneGeometry\",{args:[2,4,8]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#2e7d32\"})]}),type==='wide'&&/*#__PURE__*/_jsxs(\"mesh\",{position:[position[0],position[1]+4,position[2]],castShadow:true,children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:[3,1,2,8]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#388e3c\"})]})]},`tree-${position.join('-')}`);};// Hills\nconst createHill=(position,size)=>{const[hillRef]=useSphere(()=>({args:[size],position:[position[0],position[1]-size/2+0.5,position[2]],type:'Static'}));return/*#__PURE__*/_jsxs(\"mesh\",{ref:hillRef,castShadow:true,receiveShadow:true,children:[/*#__PURE__*/_jsx(\"sphereGeometry\",{args:[size,16,16,0,Math.PI*2,0,Math.PI/2]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#8bc34a\"})]},`hill-${position.join('-')}`);};// Rocks and boulders\nconst createRock=(position,size)=>{const[rockRef]=useBox(()=>({args:[size[0],size[1],size[2]],position:[position[0],position[1]+size[1]/2,position[2]],type:'Static'}));return/*#__PURE__*/_jsxs(\"mesh\",{ref:rockRef,castShadow:true,receiveShadow:true,children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[size[0],size[1],size[2]]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#757575\"})]},`rock-${position.join('-')}`);};// Walls and barriers\nconst createWall=function(position,size){let rotation=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[0,0,0];let color=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"#8d6e63\";const[wallRef]=useBox(()=>({args:[size[0],size[1],size[2]],position,rotation,type:'Static'}));return/*#__PURE__*/_jsxs(\"mesh\",{ref:wallRef,castShadow:true,receiveShadow:true,children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[size[0],size[1],size[2]]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:color})]},`wall-${position.join('-')}`);};// Wooden cabin\nconst createCabin=position=>{return/*#__PURE__*/_jsxs(\"group\",{position:[position[0],position[1],position[2]],children:[createWall([0,1.5,0],[6,3,6],[0,0,0],\"#a1887f\"),/*#__PURE__*/_jsxs(\"mesh\",{position:[0,3.5,0],castShadow:true,children:[/*#__PURE__*/_jsx(\"coneGeometry\",{args:[4.5,2,4,1],rotation:[0,Math.PI/4,0]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#5d4037\"})]}),createWall([0,1,3.01],[1.5,2,0.1],[0,0,0],\"#4e342e\"),createWall([2,1.5,3.01],[1,1,0.1],[0,0,0],\"#bbdefb\"),createWall([-2,1.5,3.01],[1,1,0.1],[0,0,0],\"#bbdefb\")]},`cabin-${position.join('-')}`);};// Tunnel\nconst createTunnel=function(position,length){let rotation=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;const tunnelWidth=3;const tunnelHeight=3;const wallThickness=0.5;const rotationY=rotation*Math.PI/180;// Create tunnel walls\nconst leftWall=createWall([position[0]+Math.sin(rotationY)*tunnelWidth/2,position[1]+tunnelHeight/2,position[2]+Math.cos(rotationY)*tunnelWidth/2],[length,tunnelHeight,wallThickness],[0,rotationY,0],\"#689f38\");const rightWall=createWall([position[0]-Math.sin(rotationY)*tunnelWidth/2,position[1]+tunnelHeight/2,position[2]-Math.cos(rotationY)*tunnelWidth/2],[length,tunnelHeight,wallThickness],[0,rotationY,0],\"#689f38\");const ceiling=createWall([position[0],position[1]+tunnelHeight,position[2]],[length,wallThickness,tunnelWidth],[0,rotationY,0],\"#689f38\");return/*#__PURE__*/_jsxs(\"group\",{children:[leftWall,rightWall,ceiling]},`tunnel-${position.join('-')}`);};// Small pond\nconst createPond=(position,radius)=>{const segments=16;const[pondRef]=useCylinder(()=>({args:[radius,radius,0.1,segments],position:[position[0],position[1]+0.05,position[2]],rotation:[Math.PI/2,0,0],type:'Static'}));return/*#__PURE__*/_jsxs(\"mesh\",{ref:pondRef,receiveShadow:true,children:[/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:[radius,radius,0.1,segments]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#1976d2\",transparent:true,opacity:0.8})]},`pond-${position.join('-')}`);};// Tall grass patches (for hiding)\nconst createGrassPatch=(position,size)=>{return/*#__PURE__*/_jsxs(\"group\",{position:[position[0],position[1],position[2]],children:[/*#__PURE__*/_jsxs(\"mesh\",{receiveShadow:true,children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[size[0],0.1,size[1]]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#7cb342\"})]}),Array.from({length:10}).map((_,i)=>{const x=(Math.random()-0.5)*size[0]*0.8;const z=(Math.random()-0.5)*size[1]*0.8;const height=0.5+Math.random()*0.5;return/*#__PURE__*/_jsxs(\"mesh\",{position:[x,height/2,z],castShadow:true,children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[0.1,height,0.1]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#8bc34a\"})]},`blade-${i}`);})]},`grass-${position.join('-')}`);};return/*#__PURE__*/_jsxs(\"group\",{children:[/*#__PURE__*/_jsxs(\"mesh\",{ref:groundRef,receiveShadow:true,position:[0,-0.5,0],children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[100,1,100]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#7cb342\"})]}),createTree([8,0,3],'normal'),createTree([-7,0,-8],'pine'),createTree([3,0,-10],'wide'),createTree([15,0,8],'normal'),createTree([-12,0,10],'pine'),createTree([8,0,-15],'wide'),createTree([-15,0,-12],'normal'),createTree([25,0,25],'pine'),createTree([-25,0,-25],'wide'),createTree([20,0,-20],'normal'),createTree([-20,0,20],'pine'),createTree([12,0,12],'normal'),createTree([14,0,13],'pine'),createTree([13,0,15],'wide'),createTree([11,0,14],'normal'),createHill([15,0,15],5),createHill([-15,0,-15],7),createHill([25,0,-10],6),createHill([-25,0,10],8),createRock([5,0,-5],[2,1.5,2]),createRock([-8,0,5],[3,2,2]),createRock([12,0,-8],[1.5,1,1.5]),createWall([0,1.5,20],[15,3,1]),createWall([-20,1.5,0],[1,3,15],[0,Math.PI/2,0]),createCabin([15,0,-15]),createTunnel([-10,0,0],10,0),createTunnel([10,0,-5],12,90),createPond([0,0,0],8),createGrassPatch([5,0,10],[4,4]),createGrassPatch([-8,0,-12],[5,3]),createGrassPatch([18,0,5],[6,6]),createGrassPatch([-15,0,15],[4,5]),/*#__PURE__*/_jsxs(\"group\",{position:[10,0,-10],children:[createWall([0,2.5,0],[8,5,8],[0,0,0],\"#90a4ae\"),/*#__PURE__*/_jsxs(\"mesh\",{position:[0,5.5,0],castShadow:true,children:[/*#__PURE__*/_jsx(\"coneGeometry\",{args:[5,3,4]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#607d8b\"})]}),createWall([0,1.5,4.01],[2,3,0.1],[0,0,0],\"#455a64\"),createWall([3,2.5,4.01],[1.5,1.5,0.1],[0,0,0],\"#bbdefb\"),createWall([-3,2.5,4.01],[1.5,1.5,0.1],[0,0,0],\"#bbdefb\")]})]});};export default GrassMap;","map":{"version":3,"names":["React","useBox","useCylinder","useSphere","useLoader","TextureLoader","THREE","jsx","_jsx","jsxs","_jsxs","GrassMap","spawnPoints","position","team","groundRef","args","type","material","friction","createTree","arguments","length","undefined","trunkRef","rotation","Math","PI","children","ref","castShadow","color","join","createHill","size","hillRef","receiveShadow","createRock","rockRef","createWall","wallRef","createCabin","createTunnel","tunnelWidth","tunnelHeight","wallThickness","rotationY","leftWall","sin","cos","rightWall","ceiling","createPond","radius","segments","pondRef","transparent","opacity","createGrassPatch","Array","from","map","_","i","x","random","z","height"],"sources":["C:/Users/ahmed/3d-shooter-game/src/game/maps/GrassMap.js"],"sourcesContent":["import React from 'react';\r\nimport { useBox, useCylinder, useSphere } from '@react-three/cannon';\r\nimport { useLoader } from '@react-three/fiber';\r\nimport { TextureLoader } from 'three';\r\nimport * as THREE from 'three';\r\n\r\n// This is an enhanced version of the grass map with more detailed features\r\nconst GrassMap = () => {\r\n  // Create spawn points for players\r\n  const spawnPoints = [\r\n    // Red team spawn points\r\n    { position: [-20, 1, -20], team: 'red' },\r\n    { position: [-18, 1, -18], team: 'red' },\r\n    { position: [-22, 1, -18], team: 'red' },\r\n    { position: [-18, 1, -22], team: 'red' },\r\n    { position: [-22, 1, -22], team: 'red' },\r\n    \r\n    // Blue team spawn points\r\n    { position: [20, 1, 20], team: 'blue' },\r\n    { position: [18, 1, 18], team: 'blue' },\r\n    { position: [22, 1, 18], team: 'blue' },\r\n    { position: [18, 1, 22], team: 'blue' },\r\n    { position: [22, 1, 22], team: 'blue' },\r\n  ];\r\n\r\n  // Create physics bodies for various map elements\r\n  const [groundRef] = useBox(() => ({\r\n    args: [100, 1, 100],\r\n    position: [0, -0.5, 0],\r\n    type: 'Static',\r\n    material: { friction: 0.3 }\r\n  }));\r\n\r\n  // Trees\r\n  const createTree = (position, type = 'normal') => {\r\n    const [trunkRef] = useCylinder(() => ({\r\n      args: [0.5, 0.5, 4, 8],\r\n      position: [position[0], position[1] + 2, position[2]],\r\n      rotation: [Math.PI / 2, 0, 0],\r\n      type: 'Static',\r\n    }));\r\n\r\n    return (\r\n      <group key={`tree-${position.join('-')}`}>\r\n        {/* Tree trunk */}\r\n        <mesh ref={trunkRef} castShadow>\r\n          <cylinderGeometry args={[0.5, 0.5, 4, 8]} />\r\n          <meshStandardMaterial color=\"#5d4037\" />\r\n        </mesh>\r\n        \r\n        {/* Tree top - different shapes based on type */}\r\n        {type === 'normal' && (\r\n          <mesh position={[position[0], position[1] + 4.5, position[2]]} castShadow>\r\n            <sphereGeometry args={[2, 8, 8]} />\r\n            <meshStandardMaterial color=\"#33691e\" />\r\n          </mesh>\r\n        )}\r\n        \r\n        {type === 'pine' && (\r\n          <mesh position={[position[0], position[1] + 4.5, position[2]]} castShadow>\r\n            <coneGeometry args={[2, 4, 8]} />\r\n            <meshStandardMaterial color=\"#2e7d32\" />\r\n          </mesh>\r\n        )}\r\n        \r\n        {type === 'wide' && (\r\n          <mesh position={[position[0], position[1] + 4, position[2]]} castShadow>\r\n            <cylinderGeometry args={[3, 1, 2, 8]} />\r\n            <meshStandardMaterial color=\"#388e3c\" />\r\n          </mesh>\r\n        )}\r\n      </group>\r\n    );\r\n  };\r\n\r\n  // Hills\r\n  const createHill = (position, size) => {\r\n    const [hillRef] = useSphere(() => ({\r\n      args: [size],\r\n      position: [position[0], position[1] - size/2 + 0.5, position[2]],\r\n      type: 'Static',\r\n    }));\r\n\r\n    return (\r\n      <mesh ref={hillRef} castShadow receiveShadow key={`hill-${position.join('-')}`}>\r\n        <sphereGeometry args={[size, 16, 16, 0, Math.PI * 2, 0, Math.PI / 2]} />\r\n        <meshStandardMaterial color=\"#8bc34a\" />\r\n      </mesh>\r\n    );\r\n  };\r\n\r\n  // Rocks and boulders\r\n  const createRock = (position, size) => {\r\n    const [rockRef] = useBox(() => ({\r\n      args: [size[0], size[1], size[2]],\r\n      position: [position[0], position[1] + size[1]/2, position[2]],\r\n      type: 'Static',\r\n    }));\r\n\r\n    return (\r\n      <mesh ref={rockRef} castShadow receiveShadow key={`rock-${position.join('-')}`}>\r\n        <boxGeometry args={[size[0], size[1], size[2]]} />\r\n        <meshStandardMaterial color=\"#757575\" />\r\n      </mesh>\r\n    );\r\n  };\r\n\r\n  // Walls and barriers\r\n  const createWall = (position, size, rotation = [0, 0, 0], color = \"#8d6e63\") => {\r\n    const [wallRef] = useBox(() => ({\r\n      args: [size[0], size[1], size[2]],\r\n      position,\r\n      rotation,\r\n      type: 'Static',\r\n    }));\r\n\r\n    return (\r\n      <mesh ref={wallRef} castShadow receiveShadow key={`wall-${position.join('-')}`}>\r\n        <boxGeometry args={[size[0], size[1], size[2]]} />\r\n        <meshStandardMaterial color={color} />\r\n      </mesh>\r\n    );\r\n  };\r\n\r\n  // Wooden cabin\r\n  const createCabin = (position) => {\r\n    return (\r\n      <group key={`cabin-${position.join('-')}`} position={[position[0], position[1], position[2]]}>\r\n        {/* Base */}\r\n        {createWall([0, 1.5, 0], [6, 3, 6], [0, 0, 0], \"#a1887f\")}\r\n        \r\n        {/* Roof */}\r\n        <mesh position={[0, 3.5, 0]} castShadow>\r\n          <coneGeometry args={[4.5, 2, 4, 1]} rotation={[0, Math.PI/4, 0]} />\r\n          <meshStandardMaterial color=\"#5d4037\" />\r\n        </mesh>\r\n        \r\n        {/* Door */}\r\n        {createWall([0, 1, 3.01], [1.5, 2, 0.1], [0, 0, 0], \"#4e342e\")}\r\n        \r\n        {/* Windows */}\r\n        {createWall([2, 1.5, 3.01], [1, 1, 0.1], [0, 0, 0], \"#bbdefb\")}\r\n        {createWall([-2, 1.5, 3.01], [1, 1, 0.1], [0, 0, 0], \"#bbdefb\")}\r\n      </group>\r\n    );\r\n  };\r\n\r\n  // Tunnel\r\n  const createTunnel = (position, length, rotation = 0) => {\r\n    const tunnelWidth = 3;\r\n    const tunnelHeight = 3;\r\n    const wallThickness = 0.5;\r\n    \r\n    const rotationY = rotation * Math.PI / 180;\r\n    \r\n    // Create tunnel walls\r\n    const leftWall = createWall(\r\n      [\r\n        position[0] + Math.sin(rotationY) * tunnelWidth/2,\r\n        position[1] + tunnelHeight/2,\r\n        position[2] + Math.cos(rotationY) * tunnelWidth/2\r\n      ],\r\n      [length, tunnelHeight, wallThickness],\r\n      [0, rotationY, 0],\r\n      \"#689f38\"\r\n    );\r\n    \r\n    const rightWall = createWall(\r\n      [\r\n        position[0] - Math.sin(rotationY) * tunnelWidth/2,\r\n        position[1] + tunnelHeight/2,\r\n        position[2] - Math.cos(rotationY) * tunnelWidth/2\r\n      ],\r\n      [length, tunnelHeight, wallThickness],\r\n      [0, rotationY, 0],\r\n      \"#689f38\"\r\n    );\r\n    \r\n    const ceiling = createWall(\r\n      [\r\n        position[0],\r\n        position[1] + tunnelHeight,\r\n        position[2]\r\n      ],\r\n      [length, wallThickness, tunnelWidth],\r\n      [0, rotationY, 0],\r\n      \"#689f38\"\r\n    );\r\n    \r\n    return (\r\n      <group key={`tunnel-${position.join('-')}`}>\r\n        {leftWall}\r\n        {rightWall}\r\n        {ceiling}\r\n      </group>\r\n    );\r\n  };\r\n\r\n  // Small pond\r\n  const createPond = (position, radius) => {\r\n    const segments = 16;\r\n    const [pondRef] = useCylinder(() => ({\r\n      args: [radius, radius, 0.1, segments],\r\n      position: [position[0], position[1] + 0.05, position[2]],\r\n      rotation: [Math.PI / 2, 0, 0],\r\n      type: 'Static',\r\n    }));\r\n\r\n    return (\r\n      <mesh ref={pondRef} receiveShadow key={`pond-${position.join('-')}`}>\r\n        <cylinderGeometry args={[radius, radius, 0.1, segments]} />\r\n        <meshStandardMaterial color=\"#1976d2\" transparent opacity={0.8} />\r\n      </mesh>\r\n    );\r\n  };\r\n\r\n  // Tall grass patches (for hiding)\r\n  const createGrassPatch = (position, size) => {\r\n    return (\r\n      <group key={`grass-${position.join('-')}`} position={[position[0], position[1], position[2]]}>\r\n        {/* Base */}\r\n        <mesh receiveShadow>\r\n          <boxGeometry args={[size[0], 0.1, size[1]]} />\r\n          <meshStandardMaterial color=\"#7cb342\" />\r\n        </mesh>\r\n        \r\n        {/* Grass blades (simplified representation) */}\r\n        {Array.from({ length: 10 }).map((_, i) => {\r\n          const x = (Math.random() - 0.5) * size[0] * 0.8;\r\n          const z = (Math.random() - 0.5) * size[1] * 0.8;\r\n          const height = 0.5 + Math.random() * 0.5;\r\n          \r\n          return (\r\n            <mesh key={`blade-${i}`} position={[x, height/2, z]} castShadow>\r\n              <boxGeometry args={[0.1, height, 0.1]} />\r\n              <meshStandardMaterial color=\"#8bc34a\" />\r\n            </mesh>\r\n          );\r\n        })}\r\n      </group>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <group>\r\n      {/* Ground */}\r\n      <mesh ref={groundRef} receiveShadow position={[0, -0.5, 0]}>\r\n        <boxGeometry args={[100, 1, 100]} />\r\n        <meshStandardMaterial color=\"#7cb342\" />\r\n      </mesh>\r\n\r\n      {/* Create trees in various positions */}\r\n      {createTree([8, 0, 3], 'normal')}\r\n      {createTree([-7, 0, -8], 'pine')}\r\n      {createTree([3, 0, -10], 'wide')}\r\n      {createTree([15, 0, 8], 'normal')}\r\n      {createTree([-12, 0, 10], 'pine')}\r\n      {createTree([8, 0, -15], 'wide')}\r\n      {createTree([-15, 0, -12], 'normal')}\r\n      {createTree([25, 0, 25], 'pine')}\r\n      {createTree([-25, 0, -25], 'wide')}\r\n      {createTree([20, 0, -20], 'normal')}\r\n      {createTree([-20, 0, 20], 'pine')}\r\n      \r\n      {/* Create a cluster of trees */}\r\n      {createTree([12, 0, 12], 'normal')}\r\n      {createTree([14, 0, 13], 'pine')}\r\n      {createTree([13, 0, 15], 'wide')}\r\n      {createTree([11, 0, 14], 'normal')}\r\n      \r\n      {/* Hills */}\r\n      {createHill([15, 0, 15], 5)}\r\n      {createHill([-15, 0, -15], 7)}\r\n      {createHill([25, 0, -10], 6)}\r\n      {createHill([-25, 0, 10], 8)}\r\n      \r\n      {/* Rocks and boulders */}\r\n      {createRock([5, 0, -5], [2, 1.5, 2])}\r\n      {createRock([-8, 0, 5], [3, 2, 2])}\r\n      {createRock([12, 0, -8], [1.5, 1, 1.5])}\r\n      \r\n      {/* Walls and barriers */}\r\n      {createWall([0, 1.5, 20], [15, 3, 1])}\r\n      {createWall([-20, 1.5, 0], [1, 3, 15], [0, Math.PI/2, 0])}\r\n      \r\n      {/* Wooden cabin */}\r\n      {createCabin([15, 0, -15])}\r\n      \r\n      {/* Tunnels */}\r\n      {createTunnel([-10, 0, 0], 10, 0)}\r\n      {createTunnel([10, 0, -5], 12, 90)}\r\n      \r\n      {/* Small pond in center */}\r\n      {createPond([0, 0, 0], 8)}\r\n      \r\n      {/* Tall grass patches for hiding */}\r\n      {createGrassPatch([5, 0, 10], [4, 4])}\r\n      {createGrassPatch([-8, 0, -12], [5, 3])}\r\n      {createGrassPatch([18, 0, 5], [6, 6])}\r\n      {createGrassPatch([-15, 0, 15], [4, 5])}\r\n      \r\n      {/* Building */}\r\n      <group position={[10, 0, -10]}>\r\n        {createWall([0, 2.5, 0], [8, 5, 8], [0, 0, 0], \"#90a4ae\")}\r\n        <mesh position={[0, 5.5, 0]} castShadow>\r\n          <coneGeometry args={[5, 3, 4]} />\r\n          <meshStandardMaterial color=\"#607d8b\" />\r\n        </mesh>\r\n        \r\n        {/* Door */}\r\n        {createWall([0, 1.5, 4.01], [2, 3, 0.1], [0, 0, 0], \"#455a64\")}\r\n        \r\n        {/* Windows */}\r\n        {createWall([3, 2.5, 4.01], [1.5, 1.5, 0.1], [0, 0, 0], \"#bbdefb\")}\r\n        {createWall([-3, 2.5, 4.01], [1.5, 1.5, 0.1], [0, 0, 0], \"#bbdefb\")}\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default GrassMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}