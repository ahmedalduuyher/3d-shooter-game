{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{useThree,useFrame}from'@react-three/fiber';import THREE from'../utils/ThreeShims';const PixelRenderer=_ref=>{let{resolution=0.5}=_ref;const{gl,scene,camera}=useThree();const pixelRenderTarget=useRef();// Set up pixel rendering effect\nuseEffect(()=>{// Configure renderer for pixel effect\ngl.outputEncoding=THREE.sRGBEncoding;gl.toneMapping=THREE.ACESFilmicToneMapping;gl.toneMappingExposure=1.0;// Create render target with lower resolution for pixelated effect\nconst pixelRenderTargetOptions={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,encoding:THREE.sRGBEncoding};// Create render target at reduced resolution\nconst pixelScale=resolution;pixelRenderTarget.current=new THREE.WebGLRenderTarget(window.innerWidth*pixelScale,window.innerHeight*pixelScale,pixelRenderTargetOptions);// Handle window resize\nconst handleResize=()=>{pixelRenderTarget.current.setSize(window.innerWidth*pixelScale,window.innerHeight*pixelScale);};window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('resize',handleResize);pixelRenderTarget.current.dispose();};},[gl,resolution]);// Apply pixel effect on each frame\nuseFrame(()=>{// Render scene to low-res render target\ngl.setRenderTarget(pixelRenderTarget.current);gl.render(scene,camera);// Render low-res result to screen\ngl.setRenderTarget(null);gl.render(scene,camera);},1);return null;};export default PixelRenderer;","map":{"version":3,"names":["React","useEffect","useRef","useThree","useFrame","THREE","PixelRenderer","_ref","resolution","gl","scene","camera","pixelRenderTarget","outputEncoding","sRGBEncoding","toneMapping","ACESFilmicToneMapping","toneMappingExposure","pixelRenderTargetOptions","minFilter","NearestFilter","magFilter","format","RGBAFormat","encoding","pixelScale","current","WebGLRenderTarget","window","innerWidth","innerHeight","handleResize","setSize","addEventListener","removeEventListener","dispose","setRenderTarget","render"],"sources":["C:/Users/ahmed/3d-shooter-game/src/game/rendering/PixelRenderer.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport THREE from '../utils/ThreeShims';\r\n\r\nconst PixelRenderer = ({ resolution = 0.5 }) => {\r\n  const { gl, scene, camera } = useThree();\r\n  const pixelRenderTarget = useRef();\r\n  \r\n  // Set up pixel rendering effect\r\n  useEffect(() => {\r\n    // Configure renderer for pixel effect\r\n    gl.outputEncoding = THREE.sRGBEncoding;\r\n    gl.toneMapping = THREE.ACESFilmicToneMapping;\r\n    gl.toneMappingExposure = 1.0;\r\n    \r\n    // Create render target with lower resolution for pixelated effect\r\n    const pixelRenderTargetOptions = {\r\n      minFilter: THREE.NearestFilter,\r\n      magFilter: THREE.NearestFilter,\r\n      format: THREE.RGBAFormat,\r\n      encoding: THREE.sRGBEncoding\r\n    };\r\n    \r\n    // Create render target at reduced resolution\r\n    const pixelScale = resolution;\r\n    pixelRenderTarget.current = new THREE.WebGLRenderTarget(\r\n      window.innerWidth * pixelScale,\r\n      window.innerHeight * pixelScale,\r\n      pixelRenderTargetOptions\r\n    );\r\n    \r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      pixelRenderTarget.current.setSize(\r\n        window.innerWidth * pixelScale,\r\n        window.innerHeight * pixelScale\r\n      );\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      pixelRenderTarget.current.dispose();\r\n    };\r\n  }, [gl, resolution]);\r\n  \r\n  // Apply pixel effect on each frame\r\n  useFrame(() => {\r\n    // Render scene to low-res render target\r\n    gl.setRenderTarget(pixelRenderTarget.current);\r\n    gl.render(scene, camera);\r\n    \r\n    // Render low-res result to screen\r\n    gl.setRenderTarget(null);\r\n    gl.render(scene, camera);\r\n  }, 1);\r\n  \r\n  return null;\r\n};\r\n\r\nexport default PixelRenderer;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OAASC,QAAQ,CAAEC,QAAQ,KAAQ,oBAAoB,CACvD,MAAO,CAAAC,KAAK,KAAM,qBAAqB,CAEvC,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAA0B,IAAzB,CAAEC,UAAU,CAAG,GAAI,CAAC,CAAAD,IAAA,CACzC,KAAM,CAAEE,EAAE,CAAEC,KAAK,CAAEC,MAAO,CAAC,CAAGR,QAAQ,CAAC,CAAC,CACxC,KAAM,CAAAS,iBAAiB,CAAGV,MAAM,CAAC,CAAC,CAElC;AACAD,SAAS,CAAC,IAAM,CACd;AACAQ,EAAE,CAACI,cAAc,CAAGR,KAAK,CAACS,YAAY,CACtCL,EAAE,CAACM,WAAW,CAAGV,KAAK,CAACW,qBAAqB,CAC5CP,EAAE,CAACQ,mBAAmB,CAAG,GAAG,CAE5B;AACA,KAAM,CAAAC,wBAAwB,CAAG,CAC/BC,SAAS,CAAEd,KAAK,CAACe,aAAa,CAC9BC,SAAS,CAAEhB,KAAK,CAACe,aAAa,CAC9BE,MAAM,CAAEjB,KAAK,CAACkB,UAAU,CACxBC,QAAQ,CAAEnB,KAAK,CAACS,YAClB,CAAC,CAED;AACA,KAAM,CAAAW,UAAU,CAAGjB,UAAU,CAC7BI,iBAAiB,CAACc,OAAO,CAAG,GAAI,CAAArB,KAAK,CAACsB,iBAAiB,CACrDC,MAAM,CAACC,UAAU,CAAGJ,UAAU,CAC9BG,MAAM,CAACE,WAAW,CAAGL,UAAU,CAC/BP,wBACF,CAAC,CAED;AACA,KAAM,CAAAa,YAAY,CAAGA,CAAA,GAAM,CACzBnB,iBAAiB,CAACc,OAAO,CAACM,OAAO,CAC/BJ,MAAM,CAACC,UAAU,CAAGJ,UAAU,CAC9BG,MAAM,CAACE,WAAW,CAAGL,UACvB,CAAC,CACH,CAAC,CAEDG,MAAM,CAACK,gBAAgB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CAE/C,MAAO,IAAM,CACXH,MAAM,CAACM,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CAClDnB,iBAAiB,CAACc,OAAO,CAACS,OAAO,CAAC,CAAC,CACrC,CAAC,CACH,CAAC,CAAE,CAAC1B,EAAE,CAAED,UAAU,CAAC,CAAC,CAEpB;AACAJ,QAAQ,CAAC,IAAM,CACb;AACAK,EAAE,CAAC2B,eAAe,CAACxB,iBAAiB,CAACc,OAAO,CAAC,CAC7CjB,EAAE,CAAC4B,MAAM,CAAC3B,KAAK,CAAEC,MAAM,CAAC,CAExB;AACAF,EAAE,CAAC2B,eAAe,CAAC,IAAI,CAAC,CACxB3B,EAAE,CAAC4B,MAAM,CAAC3B,KAAK,CAAEC,MAAM,CAAC,CAC1B,CAAC,CAAE,CAAC,CAAC,CAEL,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}