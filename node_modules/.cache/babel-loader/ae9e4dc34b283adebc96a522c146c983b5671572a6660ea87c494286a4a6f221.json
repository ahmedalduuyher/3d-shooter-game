{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{useBox}from'@react-three/cannon';import THREE from'../utils/ThreeShims';// Base class for all weapons\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class WeaponBase{constructor(name,damage,fireRate,reloadTime,magazineSize,reserveAmmo,range,spread){this.name=name;this.damage=damage;this.fireRate=fireRate;// shots per second\nthis.reloadTime=reloadTime;// seconds\nthis.magazineSize=magazineSize;this.reserveAmmo=reserveAmmo;this.currentAmmo=magazineSize;this.range=range;// maximum effective range\nthis.spread=spread;// accuracy (lower is better)\nthis.isReloading=false;this.lastFired=0;}canFire(){const now=Date.now();return this.currentAmmo>0&&!this.isReloading&&now-this.lastFired>1000/this.fireRate;}fire(){if(!this.canFire())return false;this.currentAmmo--;this.lastFired=Date.now();return true;}reload(){if(this.isReloading||this.currentAmmo===this.magazineSize||this.reserveAmmo<=0)return false;this.isReloading=true;setTimeout(()=>{const ammoNeeded=this.magazineSize-this.currentAmmo;const ammoToAdd=Math.min(ammoNeeded,this.reserveAmmo);this.currentAmmo+=ammoToAdd;this.reserveAmmo-=ammoToAdd;this.isReloading=false;},this.reloadTime*1000);return true;}// Calculate damage based on distance\ncalculateDamage(distance){// Linear falloff based on distance\nconst falloffFactor=Math.max(0,1-distance/this.range);return this.damage*falloffFactor;}// Calculate spread for a shot\ncalculateSpread(){// Return a random angle within the spread range\nreturn(Math.random()-0.5)*this.spread;}}// Specific weapon classes\nexport class AK47 extends WeaponBase{constructor(){// name, damage, fireRate, reloadTime, magazineSize, reserveAmmo, range, spread\nsuper('AK-47',25,8,2.5,30,90,100,0.05);}}export class Shotgun extends WeaponBase{constructor(){// Shotgun has high damage but short range and slow fire rate\nsuper('Shotgun',80,1,3,8,32,30,0.2);}// Override fire method for shotgun to fire multiple pellets\nfire(){if(super.fire()){// Return array of spread angles for multiple pellets\nreturn Array.from({length:8},()=>this.calculateSpread());}return false;}}export class Sniper extends WeaponBase{constructor(){// Sniper has highest damage, longest range, but slowest fire rate\nsuper('Sniper',100,1,3.5,5,20,200,0.01);}}export class SMG extends WeaponBase{constructor(){// SMG has low damage but high fire rate\nsuper('SMG',15,15,2,25,100,50,0.08);}}// Weapon component for rendering and physics\nconst Weapon=_ref=>{let{type,position,rotation,dropped=false,onPickup}=_ref;// Physics for dropped weapons\nconst[ref,api]=useBox(()=>({mass:dropped?1:0,position,rotation,args:[0.5,0.2,1],type:dropped?'Dynamic':'Static',onCollide:e=>{// Check if collision is with player\nif(e.body.name==='player'&&dropped&&onPickup){onPickup();}}}));// Determine weapon color and shape based on type\nlet color;let dimensions=[0.5,0.2,1];// default size\nswitch(type){case'AK-47':color='#8d6e63';dimensions=[0.5,0.2,1];break;case'Shotgun':color='#5d4037';dimensions=[0.4,0.25,0.8];break;case'Sniper':color='#455a64';dimensions=[0.3,0.2,1.2];break;case'SMG':color='#78909c';dimensions=[0.4,0.2,0.7];break;default:color='#9e9e9e';}// Set up despawn timer for dropped weapons\nuseEffect(()=>{let despawnTimer;if(dropped){// Despawn after 10 seconds\ndespawnTimer=setTimeout(()=>{// Remove weapon from scene\nif(ref.current){ref.current.parent.remove(ref.current);}},10000);}return()=>{if(despawnTimer){clearTimeout(despawnTimer);}};},[dropped,ref]);return/*#__PURE__*/_jsxs(\"mesh\",{ref:ref,castShadow:true,name:`weapon-${type}`,children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:dimensions}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:color})]});};export default Weapon;","map":{"version":3,"names":["React","useRef","useEffect","useBox","THREE","jsx","_jsx","jsxs","_jsxs","WeaponBase","constructor","name","damage","fireRate","reloadTime","magazineSize","reserveAmmo","range","spread","currentAmmo","isReloading","lastFired","canFire","now","Date","fire","reload","setTimeout","ammoNeeded","ammoToAdd","Math","min","calculateDamage","distance","falloffFactor","max","calculateSpread","random","AK47","Shotgun","Array","from","length","Sniper","SMG","Weapon","_ref","type","position","rotation","dropped","onPickup","ref","api","mass","args","onCollide","e","body","color","dimensions","despawnTimer","current","parent","remove","clearTimeout","castShadow","children"],"sources":["C:/Users/ahmed/3d-shooter-game/src/game/weapons/Weapon.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { useBox } from '@react-three/cannon';\r\nimport THREE from '../utils/ThreeShims';\r\n\r\n// Base class for all weapons\r\nclass WeaponBase {\r\n  constructor(name, damage, fireRate, reloadTime, magazineSize, reserveAmmo, range, spread) {\r\n    this.name = name;\r\n    this.damage = damage;\r\n    this.fireRate = fireRate; // shots per second\r\n    this.reloadTime = reloadTime; // seconds\r\n    this.magazineSize = magazineSize;\r\n    this.reserveAmmo = reserveAmmo;\r\n    this.currentAmmo = magazineSize;\r\n    this.range = range; // maximum effective range\r\n    this.spread = spread; // accuracy (lower is better)\r\n    this.isReloading = false;\r\n    this.lastFired = 0;\r\n  }\r\n\r\n  canFire() {\r\n    const now = Date.now();\r\n    return (\r\n      this.currentAmmo > 0 &&\r\n      !this.isReloading &&\r\n      now - this.lastFired > 1000 / this.fireRate\r\n    );\r\n  }\r\n\r\n  fire() {\r\n    if (!this.canFire()) return false;\r\n    \r\n    this.currentAmmo--;\r\n    this.lastFired = Date.now();\r\n    return true;\r\n  }\r\n\r\n  reload() {\r\n    if (this.isReloading || this.currentAmmo === this.magazineSize || this.reserveAmmo <= 0) return false;\r\n    \r\n    this.isReloading = true;\r\n    \r\n    setTimeout(() => {\r\n      const ammoNeeded = this.magazineSize - this.currentAmmo;\r\n      const ammoToAdd = Math.min(ammoNeeded, this.reserveAmmo);\r\n      \r\n      this.currentAmmo += ammoToAdd;\r\n      this.reserveAmmo -= ammoToAdd;\r\n      this.isReloading = false;\r\n    }, this.reloadTime * 1000);\r\n    \r\n    return true;\r\n  }\r\n\r\n  // Calculate damage based on distance\r\n  calculateDamage(distance) {\r\n    // Linear falloff based on distance\r\n    const falloffFactor = Math.max(0, 1 - (distance / this.range));\r\n    return this.damage * falloffFactor;\r\n  }\r\n\r\n  // Calculate spread for a shot\r\n  calculateSpread() {\r\n    // Return a random angle within the spread range\r\n    return (Math.random() - 0.5) * this.spread;\r\n  }\r\n}\r\n\r\n// Specific weapon classes\r\nexport class AK47 extends WeaponBase {\r\n  constructor() {\r\n    // name, damage, fireRate, reloadTime, magazineSize, reserveAmmo, range, spread\r\n    super('AK-47', 25, 8, 2.5, 30, 90, 100, 0.05);\r\n  }\r\n}\r\n\r\nexport class Shotgun extends WeaponBase {\r\n  constructor() {\r\n    // Shotgun has high damage but short range and slow fire rate\r\n    super('Shotgun', 80, 1, 3, 8, 32, 30, 0.2);\r\n  }\r\n\r\n  // Override fire method for shotgun to fire multiple pellets\r\n  fire() {\r\n    if (super.fire()) {\r\n      // Return array of spread angles for multiple pellets\r\n      return Array.from({ length: 8 }, () => this.calculateSpread());\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport class Sniper extends WeaponBase {\r\n  constructor() {\r\n    // Sniper has highest damage, longest range, but slowest fire rate\r\n    super('Sniper', 100, 1, 3.5, 5, 20, 200, 0.01);\r\n  }\r\n}\r\n\r\nexport class SMG extends WeaponBase {\r\n  constructor() {\r\n    // SMG has low damage but high fire rate\r\n    super('SMG', 15, 15, 2, 25, 100, 50, 0.08);\r\n  }\r\n}\r\n\r\n// Weapon component for rendering and physics\r\nconst Weapon = ({ type, position, rotation, dropped = false, onPickup }) => {\r\n  // Physics for dropped weapons\r\n  const [ref, api] = useBox(() => ({\r\n    mass: dropped ? 1 : 0,\r\n    position,\r\n    rotation,\r\n    args: [0.5, 0.2, 1],\r\n    type: dropped ? 'Dynamic' : 'Static',\r\n    onCollide: (e) => {\r\n      // Check if collision is with player\r\n      if (e.body.name === 'player' && dropped && onPickup) {\r\n        onPickup();\r\n      }\r\n    }\r\n  }));\r\n\r\n  // Determine weapon color and shape based on type\r\n  let color;\r\n  let dimensions = [0.5, 0.2, 1]; // default size\r\n  \r\n  switch (type) {\r\n    case 'AK-47':\r\n      color = '#8d6e63';\r\n      dimensions = [0.5, 0.2, 1];\r\n      break;\r\n    case 'Shotgun':\r\n      color = '#5d4037';\r\n      dimensions = [0.4, 0.25, 0.8];\r\n      break;\r\n    case 'Sniper':\r\n      color = '#455a64';\r\n      dimensions = [0.3, 0.2, 1.2];\r\n      break;\r\n    case 'SMG':\r\n      color = '#78909c';\r\n      dimensions = [0.4, 0.2, 0.7];\r\n      break;\r\n    default:\r\n      color = '#9e9e9e';\r\n  }\r\n\r\n  // Set up despawn timer for dropped weapons\r\n  useEffect(() => {\r\n    let despawnTimer;\r\n    \r\n    if (dropped) {\r\n      // Despawn after 10 seconds\r\n      despawnTimer = setTimeout(() => {\r\n        // Remove weapon from scene\r\n        if (ref.current) {\r\n          ref.current.parent.remove(ref.current);\r\n        }\r\n      }, 10000);\r\n    }\r\n    \r\n    return () => {\r\n      if (despawnTimer) {\r\n        clearTimeout(despawnTimer);\r\n      }\r\n    };\r\n  }, [dropped, ref]);\r\n\r\n  return (\r\n    <mesh ref={ref} castShadow name={`weapon-${type}`}>\r\n      <boxGeometry args={dimensions} />\r\n      <meshStandardMaterial color={color} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Weapon;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}